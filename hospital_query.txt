create database Hospital_Management_Sysytem;

use Hospital_Management_Sysytem;

create table DEPT(
DEPT_NAME VARCHAR(50) unique key,
DEPT_LOCATION varchar(60),
FACILITIES varchar(200));

CREATE TABLE ALL_DOCTORS(
DOC_NO varchar(50) primary key,
DEPT_NAME varchar(80));

CREATE TABLE DOC_REGULAR(
DOC_NO varchar(50) NOT NULL,
DEPT_NAME varchar(59),
QUALIFICATION varchar(90),
SALARY DOUBLE,
ENTRY_TIME datetime,
EXIT_TIME datetime,
ADDRESS VARCHAR(150),
PHONE_NUMBER LONG,
DATE_OF_JOIN DATE,
foreign key(DOC_NO) references ALL_DOCTORS(DOC_NO));

CREATE TABLE DOC_ON_CALL(
DOC_NO VARCHAR(50),
D_NAME VARCHAR(80),
QUALIFICATION VARCHAR(60),
FEES_PER_CALL double,
PAYMENT_DUE varchar(50),
ADDRESS varchar(150),
PHONE_NUMBER LONG,
foreign key(DOC_NO) references ALL_DOCTORS(DOC_NO) );

CREATE TABLE PATIENT_ENTRY(
PAT_NO VARCHAR(50) primary key,
PAT_NAME VARCHAR(60),
CHKUP_DATE DATE,
PAT_AGE INT,
GENDER VARCHAR(10),
RFRG_CSTNT VARCHAR(50),
DIAGNOSIS varchar(60),
REFD varchar(50),
ADDRESS varchar(50),
CITY varchar(50),
PHONE_NUMBER long,
DEPT_NAME VARCHAR(50));

CREATE table PAT_CHKUP(
PAT_NO varchar(50),
DOC_NO VARCHAR(50),
DIAGNOSIS varchar(50),
STATUS VARCHAR(50),
TREATMENT varchar(50),
foreign key(DOC_NO) references ALL_DOCTORS(DOC_NO),
foreign key(PAT_NO) references PATIENT_ENTRY(PAT_NO));

CREATE TABLE ROOM_DETAILS(
ROOM_NO VARCHAR(40) primary key,
TYPE VARCHAR(45),
STATUS VARCHAR(45),
RM_DL_CRG VARCHAR(50),
OTHER_CRG varchar(45));

CREATE TABLE PAT_ADMIT(
PAT_NO VARCHAR(60),
ADVANCE_PYMT DOUBLE,
MODE_PYMT VARCHAR(50),
ROOM_NO VARCHAR(45),
DEPT_NAME VARCHAR(50),
ADMTD_DATE DATE,
INTIAL_COND varchar(50),
INVSTGTN_DN VARCHAR(50),
TRMT_SDT VARCHAR(45),
ATTDNT_NM VARCHAR(50),
foreign key(PAT_NO) references PATIENT_ENTRY(PAT_NO),
foreign key(ROOM_NO) references ROOM_DETAILS(ROOM_NO));

create TABLE PAT_DIS(
PAT_NO varchar(45),
TR_ADVS VARCHAR(50),
TR_GVN VARCHAR(50),
MEDICINES VARCHAR(100),
PYMT_GV varchar(45),
DIS_ON DATE,
foreign key(PAT_NO) references PATIENT_ENTRY(PAT_NO));

CREATE TABLE PAT_REG(
PAT_NO VARCHAR(45),
DATE_VIST datetime,
CONDITIONS VARCHAR(150),
TREATMENT VARCHAR(50),
MEDICINES VARCHAR(150),
DOC_NO VARCHAR(50),
PAYMT DOUBLE,
foreign key(PAT_NO) references PATIENT_ENTRY(PAT_NO),
foreign key(DOC_NO) references ALL_DOCTORS(DOC_NO));

CREATE TABLE PAT_OPR(
PAT_NO VARCHAR(50),
DATE_OPR datetime,
IN_CONDITION VARCHAR(150),
AFTER_OP_CONDITION VARCHAR(150),
TYPE_OPERATION VARCHAR(100),
MEDICINES VARCHAR(70),
DOC_NO VARCHAR(45),
OPYH_NO VARCHAR(45),
OTHER_SUG VARCHAR(50),
foreign key(PAT_NO) references PATIENT_ENTRY(PAT_NO),
foreign key(DOC_NO) references ALL_DOCTORS(DOC_NO));











